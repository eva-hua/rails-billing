# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/

myApp = angular.module 'myApp', ['ngRoute', 'templates', 'angular-loading-bar', 'flash', 'pascalprecht.translate']


# http ajax service
myApp.factory "queryService", ['$http', 'flash', ($http, flash)->
  {
    http : (q, data)->
      deferred = q.defer()
      $http(data).
        success((data, status, headers)->
          deferred.resolve(data)
        ).
        error((data, status, headers)->
          deferred.reject()
          flash.danger data.error
        )
      deferred.promise
  }
]

myApp.factory('categoryFactory', ['queryService', '$q', (queryService, $q)->
  {
    getList: ()->
      queryService.http($q, {
        method: 'GET',
        url: '/api/v1/categories.json',
        params: {_: Date.now()},
        timeout: 80000
      })
    getItem: (id)->
      queryService.http($q, {
        method: 'GET',
        url: '/api/v1/categories/' + id + '.json',
        params: {_: Date.now()},
        timeout: 80000
      })
    getAll: ()->
      queryService.http($q, {
        method: 'GET',
        url: '/api/v1/categories/all.json',
        params: {_: Date.now()},
        timeout: 80000
      })
  }
])
myApp.factory('billFactory', ['queryService', '$q', (queryService, $q)->
  {
    getList: ()->
      queryService.http($q, {
        method: 'GET',
        url: '/api/v1/bills.json',
        params: {_: Date.now()},
        timeout: 80000
      })
    getItem: (id)->
      if id
        queryService.http($q, {
          method: 'GET',
          url: '/api/v1/bills/' + id + '.json',
          params: {_: Date.now()},
          timeout: 80000
        })
      else
        {
          date: (new Date()).toLocaleFormat("%Y-%m-%d")
        }
    getSummary: ()->
      queryService.http($q, {
        method: 'GET',
        url: '/api/v1/bills/summary.json',
        params: {_: Date.now()},
        timeout: 80000
      })
  }
])

myApp.config ['$routeProvider', '$translateProvider', ($routeProvider, $translateProvider)->
  $routeProvider.when('/', {
    title: "page.dashboard",
    nav_icon: "dashboard",
    templateUrl: 'index.html',
    controller: 'DashboardController'
    resolve: {
      bill_summary: ['billFactory', (billFactory)->
        billFactory.getSummary()
      ]
    }
  }).when('/category', {        # 分类
    title: "page.category",
    nav_icon: "list",
    templateUrl: 'category/index.html',
    controller: 'CategoryListController',
    resolve: {
      category_list: ['categoryFactory', (categoryFactory)->
        categoryFactory.getList()
      ]
    }
  }).when('/category/new', {
    title: "page.category_new",
    nav_icon: "list",
    templateUrl: 'category/edit.html',
    controller: 'CategoryDetailController'
    resolve: {
      category: ['categoryFactory', (categoryFactory)->
        {}
      ]
      category_list: ['categoryFactory', (categoryFactory)->
        categoryFactory.getAll()
      ]
    }
  }).when('/category/:id/edit', {
    title: "page.category_edit",
    nav_icon: "list",
    templateUrl: 'category/edit.html',
    controller: 'CategoryDetailController',
    resolve: {
      category: ['$route', 'categoryFactory', ($route, categoryFactory)->
        categoryFactory.getItem($route.current.params.id)
      ]
      category_list: ['categoryFactory', (categoryFactory)->
        categoryFactory.getAll()
      ]
    }
  }).when('/bill', {          # 帐目
    title: "page.bill",
    nav_icon: "credit-card",
    templateUrl: 'bill/index.html',
    controller: 'BillListController',
    resolve: {
      bill_list: ['billFactory', (billFactory)->
        billFactory.getList()
      ]
    }
  }).when('/bill/new', {
    title: "page.bill_new",
    nav_icon: "credit-card",
    templateUrl: 'bill/edit.html',
    controller: 'BillDetailController',
    resolve: {
      bill: ['billFactory', (billFactory)->
        billFactory.getItem()
      ]
      category_list: ['categoryFactory', (categoryFactory)->
        categoryFactory.getAll()
      ]
    }
  }).when('/bill/:id/edit', {
    title: "page.bill_edit",
    nav_icon: "credit-card",
    templateUrl: 'bill/edit.html',
    controller: 'BillDetailController',
    resolve: {
      bill: ['$route', 'billFactory', ($route, billFactory)->
        billFactory.getItem($route.current.params.id)
      ]
      category_list: ['categoryFactory', (categoryFactory)->
        categoryFactory.getAll()
      ]
    }
  }).when('/bill/chart', {          # 帐目
    title: "page.bill_chart",
    nav_icon: "credit-card",
    templateUrl: 'bill/chart.html',
    controller: 'BillChartController',
  }).otherwise({
    redirectTo: '/'
  })

  $translateProvider.translations('en', {
    'edit_op': 'Edit'
    'delete_op': 'Delete'
    'previous_page': 'Previous'
    'next_page': 'Next'
    'pages': 'Pages:'
    'bill_category': 'Category'
    'bill_type': 'Type'
    'bill_amount': 'Amount'
    'bill_date': 'Date'
    'bill_title': 'Title'
    'bill_description': 'Description'
    'bill_operate': 'Operate'
    'category_name': 'Name'
    'category_type': 'Type'
    'category_parent': 'Parent'
    'category_operate': 'Operate'
    'flash_msg_category_delete': 'Delete category "{{name}}" success!'
    'flash_msg_category_update': 'Update category "{{name}}" success!'
    'flash_msg_category_create': 'Create category "{{name}}" success!'
    'flash_msg_bill_delete': 'Delete bill "{{id}}" success!'
    'flash_msg_bill_update': 'Update bill "{{id}}" success!'
    'flash_msg_bill_create': 'Create bill success!'
    'category_type_0': 'Income'
    'category_type_1': 'Expense'
    'page.dashboard': 'Dashboard'
    'page.category': 'Category'
    'page.category_new': 'New Category'
    'page.category_edit': 'Edit Category'
    'page.bill': 'Bill'
    'page.bill_new': 'New Billing'
    'page.bill_edit': 'Edit Billing'
    'page.bill_chart': 'Billing Chart'
    'nav.category': 'Category'
    'nav.new': 'New'
    'nav.bill': 'Bill'
    'nav.bill.chart': 'Chart'
    'income': 'Income'
    'expense': 'Expense'
    'summary.week': 'This week'
    'summary.month': 'This month'
    'summary.total': 'Total'

  }).translations('zh-cn', {
    'edit_op': '编辑'
    'delete_op': '删除'
    'previous_page': '上一页'
    'next_page': '下一页'
    'pages': '页数：'
    'bill_category': '分类'
    'bill_type': '类型'
    'bill_amount': '金额'
    'bill_date': '日期'
    'bill_title': '标题'
    'bill_description': '描述'
    'bill_operate': '操作'
    'category_name': '名称'
    'category_type': '类型'
    'category_parent': '父分类'
    'category_operate': '操作'
    'flash_msg_category_delete': '删除分类 "{{name}}" 成功！'
    'flash_msg_category_update': '更新分类 "{{name}}" 成功！'
    'flash_msg_category_create': '创建分类 "{{name}}" 成功！'
    'flash_msg_bill_delete': '删除帐目 "{{id}}" 成功！'
    'flash_msg_bill_update': '更新帐目 "{{id}}" 成功！'
    'flash_msg_bill_create': '新建帐目成功！'
    'category_type_0': '收入'
    'category_type_1': '支出'
    'page.dashboard': '控制面板'
    'page.category': '分类'
    'page.category_new': '新建分类'
    'page.category_edit': '编辑分类'
    'page.bill': '帐单'
    'page.bill_new': '记帐'
    'page.bill_edit': '编辑帐目'
    'page.bill_chart': '帐目图表'
    'nav.category': '分类'
    'nav.new': '新建'
    'nav.bill': '帐目'
    'nav.bill.chart': '图表'
    'income': '收入'
    'expense': '支出'
    'summary.week': '本周'
    'summary.month': '本月'
    'summary.total': '总共'
  }).fallbackLanguage(['en'])
  $translateProvider.determinePreferredLanguage(()->
    if navigator.locale then navigator.locale else ""
  )
]

myApp.controller 'DashboardController', ['$scope', 'bill_summary', ($scope, bill_summary)->
  $scope.bill_summary = bill_summary
]

# 分类列表
myApp.controller 'CategoryListController', \
                 ['$scope', '$http', '$translate', 'flash', 'category_list', \
                  ($scope, $http, $translate, flash, category_list)->
  $scope.category_list = category_list || {total_pages:0, total_count:0, current_page:1, data:[]}

  # 删除分类
  $scope.deleteItem = (obj, idx, ev)->
    ev.preventDefault()
    if !confirm("Delete '" + obj.name + "' item?")
      return
    $http({
        method: 'DELETE',
        url: '/api/v1/categories/' + obj.id + '.json',
        timeout: 80000
      }).
      success((data, status, headers)->
        $translate('flash_msg_category_delete', { name: obj.name}).then((text)->
          flash text
        )
        $scope.category_list.data.splice(idx, 1)
      ).
      error((data, status, headers)->
        flash.danger data.error
      )

  # 翻页
  $scope.paging = (pageNum, ev)->
    ev.preventDefault()
    if pageNum < 1 || pageNum > $scope.category_list.total_pages || pageNum == $scope.category_list.current_page
      return
    $http({
        method: 'GET',
        url: '/api/v1/categories.json',
        params: {page: pageNum, _: Date.now()},
        timeout: 80000
      }).
      success((data, status, headers)->
        $scope.category_list = data
      ).
      error((data, status, headers)->
        flash.danger data.error
      )
]

# 新建、编辑分类信息
myApp.controller 'CategoryDetailController', \
                 ['$scope', '$routeParams', '$http', '$location', '$translate', 'flash', 'category', 'category_list', \
                  ($scope, $routeParams, $http, $location, $translate, flash, category, category_list)->
  $scope.category = category || {}
  $scope.category_list = category_list || []
  $translate(['category_type_0', 'category_type_1']).then((translations)->
    $scope.category_type = [
      {value: 0, name: translations['category_type_0'] },
      {value: 1, name: translations['category_type_1'] }
    ]
  )

  # filter parent category list
  $scope.filterParent = (value, index)->
    type = $scope.category.type || 0
    type == value.type

  # Submit the edit form
  $scope.Submit = (isValid, ev)->
    ev.preventDefault()
    angular.forEach($scope.categoryForm.$error.required, (field)->
      $scope.categoryForm[field.$name].$dirty = true
      $scope.categoryForm[field.$name].$pristine = false
    )
    $scope.categoryForm.$setDirty()
    unless isValid
      return

    if $scope.category.id
      url = '/api/v1/categories/' + $scope.category.id + '.json'
      message = {
        msg: "flash_msg_category_update"
        data: {name: $scope.category.name}
      }
      method = 'PUT'
    else
      url = '/api/v1/categories.json'
      message = {
        msg: "flash_msg_category_create"
        data: {name: $scope.category.name}
      }
      method = 'POST'
    data = {
      name: $scope.category.name,
      type: $scope.category.type
    }
    if $scope.category.parent
      data.parent_id = $scope.category.parent.id

    $http({
        method: method,
        url: url,
        data: data,
        timeout: 80000
      }).
      success((data, status, headers)->
        $location.path '/category'
        $translate(message.msg, message.data).then((text)->
          flash text
        )
      ).
      error((data, status, headers)->
        flash.danger data.error
      )
]

# 帐目列表
myApp.controller 'BillListController', \
                 ['$scope', '$http', '$translate', 'flash', 'bill_list', \
                  ($scope, $http, $translate, flash, bill_list)->
  $scope.bill_list = bill_list || {total_pages:0, total_count:0, current_page:1, data:[]}
  # 删除分类
  $scope.deleteItem = (obj, idx, ev)->
    ev.preventDefault()
    if !confirm("Delete this item?")
      return
    $http({
        method: 'DELETE',
        url: '/api/v1/bills/' + obj.id + '.json',
        timeout: 80000
      }).
      success((data, status, headers)->
        $translate('flash_msg_bill_delete', { id: obj.id}).then((text)->
          flash text
        )
        $scope.bill_list.data.splice(idx, 1)
      ).
      error((data, status, headers)->
        flash.danger data.error
      )
  # 翻页
  $scope.paging = (pageNum, ev)->
    ev.preventDefault()
    if pageNum < 1 || pageNum > $scope.bill_list.total_pages || pageNum == $scope.bill_list.current_page
      return
    $http({
        method: 'GET',
        url: '/api/v1/bills.json',
        params: {page: pageNum, _: Date.now()},
        timeout: 80000
      }).
      success((data, status, headers)->
        $scope.bill_list = data
      ).
      error((data, status, headers)->
        flash.danger data.error
      )
]
# 新建、编辑帐目
myApp.controller 'BillDetailController', \
                 ['$scope', '$http', '$location', '$translate', 'flash', 'bill', 'category_list', \
                  ($scope, $http, $location, $translate, flash, bill, category_list)->
  $scope.bill = bill || {}
  $scope.category_list = category_list || []
  $translate(['category_type_0', 'category_type_1']).then((translations)->
    $scope.category_type = [
      {value: 0, name: translations['category_type_0'] },
      {value: 1, name: translations['category_type_1'] }
    ]
  )

  # filter parent category list
  $scope.filterParent = (value, index)->
    type = $scope.bill.type || 0
    type == value.type

  # Submit the edit form
  $scope.Submit = (isValid, ev)->
    ev.preventDefault()
    angular.forEach($scope.billForm.$error.required, (field)->
      $scope.billForm[field.$name].$dirty = true
      $scope.billForm[field.$name].$pristine = false
    )
    $scope.billForm.$setDirty()
    unless isValid
      return

    if $scope.bill.id
      url = '/api/v1/bills/' + $scope.bill.id + '.json'
      message = {
        msg: "flash_msg_bill_update"
        data: {id: $scope.bill.id}
      }
      method = 'PUT'
    else
      url = '/api/v1/bills.json'
      message = {
        msg: "flash_msg_bill_create"
        data: {}
      }
      method = 'POST'
    data = {
      amount: $scope.bill.amount,
      title: $scope.bill.title,
      description: $scope.bill.description,
      date: $scope.bill.date,
      type: $scope.bill.type
    }
    if $scope.bill.category
      data.category_id = $scope.bill.category.id

    $http({
        method: method,
        url: url,
        data: data,
        timeout: 80000
      }).
      success((data, status, headers)->
        $location.path '/bill'
        $translate(message.msg, message.data).then((text)->
          flash text
        )
      ).
      error((data, status, headers)->
        flash.danger data.error
      )
]
myApp.controller 'BillChartController', \
                 ['$scope', '$http',  ($scope, $http)->
  $scope.year_list = (()->
    i = 2014
    now = (new Date()).getFullYear()
    l = []
    while i <= now
      l.push i
      i++
    l
  )()
]

# 切换页面时设置标题
myApp.run ['$location', '$rootScope', '$translate', ($location, $rootScope, $translate)->
  $rootScope.$on('$routeChangeSuccess', (event, current, previous)->
    if current.$$route
      $translate(current.$$route.title).then((text)->
        $rootScope.title = text
        $rootScope.nav_icon = current.$$route.nav_icon
      )
  )
]
